volumes:
  pg-data-order-service:
    driver: local
  pg-data-payment-service:
    driver: local

services:
  db-order-service:
    image: postgres:latest
    container_name: postgres_db_order_service
    restart: always
    environment:
      POSTGRES_USER: ${ORDER_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_SERVICE_DB_DB}
      POSTGRES_HOST: ${ORDER_SERVICE_DB_HOST:-db-order-service}
      POSTGRES_PORT: ${ORDER_SERVICE_DB_PORT:-5432}
    ports:
      - "5432:5432"
    volumes:
      - pg-data-order-service:/var/lib/postgresql/data
    networks:
      - tcc-network

  db-payment-service:
    image: postgres:latest
    container_name: postgres_db_payment_service
    restart: always
    environment:
      POSTGRES_USER: ${PAYMENT_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${PAYMENT_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${PAYMENT_SERVICE_DB_DB}
      POSTGRES_HOST: ${PAYMENT_SERVICE_DB_HOST:-db-payment-service}
      POSTGRES_PORT: ${PAYMENT_SERVICE_DB_PORT:-5433}
    ports:
      - "5433:5432"
    volumes:
      - pg-data-payment-service:/var/lib/postgresql/data
    networks:
      - tcc-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tcc-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - tcc-network

  order-service:
    build: './order-service'
    container_name: order_service
    restart: always
    environment:
      POSTGRES_USER: ${ORDER_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_SERVICE_DB_DB}
      POSTGRES_HOST: ${ORDER_SERVICE_DB_HOST}
      POSTGRES_PORT: ${ORDER_SERVICE_DB_PORT}
    expose:
      - "8000"
    depends_on:
      - db-order-service
      - rabbitmq
    networks:
      - tcc-network
    volumes:
      - ./order-service:/app

  api-gateway:
    build: './api-gateway'
    container_name: api-gateway
    ports:
      - "80:80"
    depends_on:
      - order-service
    networks:
      - tcc-network
  
  payment-service:
    build: './payment-service'
    container_name: payment_service
    restart: always
    environment:
      POSTGRES_USER: ${PAYMENT_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${PAYMENT_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${PAYMENT_SERVICE_DB_DB}
      POSTGRES_HOST: ${PAYMENT_SERVICE_DB_HOST}
      POSTGRES_PORT: ${PAYMENT_SERVICE_DB_PORT}
    expose:
      - "8001"
    volumes:
      - ./payment-service:/app
    depends_on:
      - db-payment-service
      - rabbitmq
    networks:
      - tcc-network

networks:
  tcc-network:
    driver: bridge
